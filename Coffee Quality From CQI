# In this project, I am querying data provided by the Coffee Quality Institute (CQI) from January of 2018

# I started by importing the Arabica and Robusta coffee dataset into SQLite
# Next, I started looking at the data and understanding what columns and rows were given

SELECT * 
FROM BIT_DB.CoffeeQualityArabica
LIMIT 20;

SELECT *
FROM BIT_DB.CoffeeQualityRobusta
LIMIT 10;

# My code starts with simple filtration of data and ordering to better suit what I was looking for

-- Find the Coffee profiles of each type of coffee, ordered by region and then Total Cup Points
SELECT [Owner.1]
, [Country.of.Origin] AS Country
, Aroma
, Flavor
, Acidity
, Body
, [Total.Cup.Points] AS TotalCupPoints
FROM BIT_DB.CoffeeQualityArabica
WHERE TotalCupPoints <> 0
AND Country <> ''
AND TotalCupPoints IS NOT NULL
ORDER BY Country, TotalCupPoints DESC;

-- How much Coffee is NUCOFFEE an owner for?
SELECT Species
, COUNT([Owner.1]) AS CoffeeCount
FROM BIT_DB.CoffeeQualityArabica
WHERE [Owner.1] IS 'NUCOFFEE'
UNION ALL
SELECT Species
, COUNT([Owner.1]) AS CoffeeCount
FROM BIT_DB.CoffeeQualityRobusta
WHERE [Owner.1] IS 'NUCOFFEE';

-- How many bags of semi-washed coffee were sold that has a fuller body? Fuller Body coffee has a point rating of 7.75 and above
SELECT SUM([Number.of.Bags]) AS sold_bags
FROM BIT_DB.CoffeeQualityArabica
WHERE body >= 7.75
AND [processing.method] LIKE '%Semi-washed%';

-- What Owner has the most Excellent scored coffee, and how many types of coffee does that equate to?
SELECT DISTINCT Owner, COUNT(*)
FROM BIT_DB.CoffeeQualityArabica
WHERE [Total.Cup.Points] >= 90
GROUP BY Owner
ORDER BY COUNT(*) DESC
LIMIT 1;

# I wanted to implement and quantify the data with aggregation operations and subqueries here

-- What coffee comes from the lowest altitude that is at least 1000m?
SELECT Owner
, [Country.Of.Origin]
, [Farm.Name]
, MIN(altitude_low_meters) AS Min_Altitude
FROM BIT_DB.CoffeeQualityArabica
WHERE [Farm.Name] IS NOT ''
AND altitude_low_meters = (SELECT MIN(altitude_low_meters)
                           FROM BIT_DB.CoffeeQualityArabica
                           GROUP BY altitude_low_meters
                           HAVING LENGTH(altitude_low_meters) = 4)
GROUP BY [Farm.Name]
HAVING LENGTH(altitude_low_meters) = 4
ORDER BY altitude_low_meters ASC;

-- Does anyone own both Robusta and Arabica coffee beans?
SELECT DISTINCT a.Owner
FROM BIT_DB.CoffeeQualityArabica a
INNER JOIN BIT_DB.CoffeeQualityRobusta r
ON r.Owner = a.Owner;

-- What's the average acidity score of coffee that is sourced from Ethiopia, rounded to the nearest 100th of a decimal
SELECT ROUND(AVG(acidity), 2) AS Average_Acidity
FROM BIT_DB.CoffeeQualityArabica
WHERE [Country.of.Origin] = 'Ethiopia';
